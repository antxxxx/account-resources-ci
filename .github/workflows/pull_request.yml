name: pr

on:
  pull_request:
    branches: [main]

env:
  BRANCH_NAME: ${{ github.event.pull_request.head.ref }}

jobs:
  quality_checks:
    uses: ./.github/workflows/quality_checks.yml

  package_code:
    uses: ./.github/workflows/sam_package_code.yml

  get_issue_number:
    runs-on: ubuntu-latest
    outputs:
      issue_number: ${{steps.get_issue_number.outputs.result}}

    steps:
      - uses: actions/github-script@v7
        name: get issue number
        id: get_issue_number
        with:
          script: |
            if (context.issue.number) {
              // Return issue number if present
              return context.issue.number;
            } else {
              // Otherwise return issue number from commit
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0].number;
            }
          result-encoding: string

  get_commit_id:
    runs-on: ubuntu-latest
    outputs:
      commit_id: ${{ steps.commit_id.outputs.commit_id }}
    steps:
      - name: Get Commit ID
        id: commit_id
        run: |
          echo "commit_id=${{ github.sha }}" >> "$GITHUB_OUTPUT"

  deploy_stacks:
    needs: [quality_checks, package_code, get_issue_number, get_commit_id]
    uses: ./.github/workflows/release_all_stacks.yml
    with:
      target_environment: dev
      version: pr-${{github.event.number}}
      change_set_version: pr-${{github.event.number}}
      execute_change_set: false
      lambda_stack_suffix: -pr-${{needs.get_issue_number.outputs.issue_number}}
      artifact_buckt_prefix: PR-${{needs.get_issue_number.outputs.issue_number}}
      version_number: PR-${{ needs.get_issue_number.outputs.issue_number }}
      commit_id: ${{ needs.get_commit_id.outputs.commit_id }}
    secrets:
      cf_create_changeset_role: ${{ secrets.DEV_CLOUD_FORMATION_CREATE_CHANGESET_ROLE }}
      cf_deploy_role: ${{ secrets.DEV_CLOUD_FORMATION_DEPLOY_ROLE }}
      SPLUNK_HEC_TOKEN: ${{ secrets.DEV_SPLUNK_HEC_TOKEN }}
